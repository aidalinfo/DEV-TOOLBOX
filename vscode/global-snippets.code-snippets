{

	"template component formulaire": {
		"scope": "vue",
		"prefix": "formulaire",
		"body": [
		"<template>", //mettre le nom de
		"\t<FormLayout icon='${0:icon}' @ajouter='ajouter' @modifier='modifier' @reinitialiser='reinitialiser' typeItem='un/une $1'>",
	 		"\t\t<v-row>",

			"\t\t</v-row>",
		"\t</FormLayout>",
		"</template>",
		"<script>",
			"import { mapState } from 'vuex';",
			"import { QUERY_$1, QUERY_$1s } from './graphql/queries';",
			"import FormLayout from '@/components/COMPONENTS-skeleton/Layouts/FormLayout.vue';",
			"import {",
				"\tMUTATION_$1Create,",
				"\tMUTATION_$1Update,",
			"} from './graphql/mutations';",
		
		"export default {",
		"name: '$TM_FILENAME_BASE',",
		"components: {",
		"\tFormLayout,",
		"},",
		"data: function () {",
		"\treturn {",	
		"\t\tinput: {},",
		"\t};",
		"},",
		"props: {",
		"\t $1: {",
		"\t\ttype: Object,",
		"\t\tdefault() {",
		"\t\t\treturn {",
		"\t\t\t\tid: undefined,",
		"\t\t\t};",
		"\t\t},",
		"\t},",
		"},",
		"computed: {",
		"\t...mapState(['formsErrors']),",
		"},",
		"mounted: function () {",
		"\tthis.init();",
		"},",
		"methods: {",
		"\tinit() {",
		"\t if (this.$route.params.id) {",
		"\t\t let id = this.$route.params.id;",
		"\t\t this.$apollo",
		"\t\t\t.query({",
		"\t\t\t\tquery: QUERY_$1,",
		"\t\t\t\tvariables: {",
		"\t\t\t\t\t\tid: id,",
		"\t\t\t\t},",
		"\t\t\t})",
		"\t\t\t.then((data) => {",
		"\t\t\t\tlet $1 = data.data.$1;",
		"\t\t\t\tthis.input = JSON.parse(JSON.stringify($1));",
		"\t\t\t});",
		"\t} else {",
		"\t\tthis.input = JSON.parse(JSON.stringify(this.$1));",
		"\t}",
		"\t},",
		"",
		"\tajouter() {",
		"\t\tlet toSend = this.inputConverter(this.input);",
		"\t\tthis.$apollo",
		"\t\t\t.mutate({",
		"\t\t\t\tmutation: MUTATION_$1Create,",
		"\t\t\t\tvariables: {",
		"\t\t\t\t\tinput: toSend,",
		"\t\t\t\t},",
		"\t\t\t})",
		"\t\t\t.then((__) => {",
		"\t\t\t\tthis.reinitialiser();",
		"\t\t\t\tthis.$store.commit('addAlert', {",
		"\t\t\t\t\ttype: 'info',",
		"\t\t\t\t\ttext: 'Votre $1 a été ajouté',",
		"\t\t\t\t});",
		"\t\t\t\tthis.$root.$emit('skeleton--close-dialog');",
		"\t\t\t\tthis.$root.$emit('${2:components(nom)}--$1-create', __.data.$1Create);",
		"\t\t\t\tthis.$root.$emit('skeleton--close-popup');",
		"\t\t\t\t});",
		"\t},",
    "",	
		"\tinputConverter(arg) {",
		"\t\tconst obj = JSON.parse(JSON.stringify(arg));",
	  "",
		"\t\tlet input = {",
		"\t\t\t",/* ajouter les autres champs*/
		"\t\t\t",
		"\t\t};",
	  "",
		"\t\tobj.id != undefined ? (input.id = obj.id) : null;",
	  "",
		"\t\treturn input;",
		"\t},",
	  "",
		"\tmodifier() {",
    "\t\tlet toSend = this.inputConverter(this.input);",
    "\t\tthis.$apollo.mutate({",
		"\t\t\tmutation: MUTATION_$1Update,",
		"\t\t\tvariables: {",
		"\t\t\t\tinput: toSend,",
		"\t\t\t},",
		"\t\t\trefetchQueries: [",
		"\t\t\t\t{",
		"\t\t\t\t\tquery: QUERY_$1s,",
		"\t\t\t\t},",
		"\t\t\t],",
		"\t\t\tupdate: (store, { data: { $1Update } }) => {",
		"\t\t\t\tthis.$emit('$1Return', $1Update);",
		"\t\t\t\tthis.$store.commit('addAlert', {",
		"\t\t\t\t\ttype: 'info',",
		"\t\t\t\t\ttext: 'Votre $1 a été modifié',",
		"\t\t\t\t});",
		"\t\t\t\tthis.$root.$emit('${2:components(nom)}--update-$1s');",
		"\t\t\t\tthis.$root.$emit('skeleton--close-dialog');",
		"\t\t\t},",
    "\t\t});",
		"\t},",
	
		
		"},",
		"};",
		"</script>"
		],
		"description": "Template de composant FormLayout"
	},

	"Template composent View ":{
		"scope": "vue",
		"prefix": "view",
		"body":[
		"<template>", //mettre le nom de
		"\t<ViewLayout :tabs='tabs' :item='$1'>",
	 	"\t\t<template v-slot:$1>",
		"\t\t\t<${1/(.*)/${1:/capitalize}/}Actions :object='$1' :withView='false' size='xl' />",
		"\t\t\t<v-row class='align-center mx-auto'>",
    "\t\t\t\t<v-col cols='12'>",
    "\t\t\t\t\t<${1/(.*)/${1:/capitalize}/}Object size='xl' :assetProp='$1' />",
    "\t\t\t\t</v-col>",  
    "\t\t\t</v-row>",
		"\t\t</template>",
		"\t</ViewLayout>",
		"</template>",
		"<script>",
			"import { QUERY_$1 } from './graphql/queries';",
			"import { ${1/(.*)/${1:/capitalize}/}Object } from './${1/(.*)/${1:/capitalize}/}Object.vue';",
			"import { ${1/(.*)/${1:/capitalize}/}Actions } from './${1/(.*)/${1:/capitalize}/}Actions.vue';",
			"import ViewLayout from '@/components/COMPONENTS-skeleton/Layouts/ViewLayout.vue';",
		"",
		"",
		"export default {",
		"name: '$TM_FILENAME_BASE',",
		"components: {",
		"\t${1/(.*)/${1:/capitalize}Object,",
		"\t${1/(.*)/${1:/capitalize}Actions,",
		"\tViewLayout,",
		"},",
		"",
		"data: function () {",
		"\treturn {",	
		"\t\t$1: {},",
		"\t\ttabs: [,",
		"\t\t\t{ icon: 'mdi-package-variant-closed', displayName: '${1/(.*)/${1:/capitalize}/}', name: '$1'},",
		"\t\t\t{ name: 'commentaires'},",
		"\t\t\t{ name: 'fichiers'},",
		"\t\t],",
		"\t};",
		"},",
		"",
		"apollo: {",
		"\t$1: {",
		"\t\tquery: QUERY_$1,",
		"\t\t\tvariables() {",
		"\t\t\t\tlet idQuery = this.showPopup ?",
		"\t\t\t\t\tthis.id :",
		"\t\t\t\t\tthis.$route.params.id ?",
		"\t\t\t\t\tthis.$route.params.id :",
		"\t\t\t\t\tthis.id;",
		"\t\t\t\treturn {",
		"\t\t\t\t\tid: idQuery,",
		"\t\t\t\t};",
		"\t\t\t},",
		"\t\t},",
		"\t},",
	"}",

		],
		"description": "Template de composant View"
	}
}